---
// Sections.astro
const sections = [
  {
    id: 1,
    imageUrl: "/sections-imgs/image1.png",
    title: "Blog",
    color: "#2196F3",
  },
  {
    id: 2,
    imageUrl: "/sections-imgs/image2.png",
    title: "Campus",
    color: "#8BC34A",
  },
  {
    id: 3,
    imageUrl: "/sections-imgs/image3.png",
    title: "Courses",
    color: "#00BCD4",
  },
  {
    id: 4,
    imageUrl: "/sections-imgs/image4.png",
    title: "Testimonials",
    color: "#FFC107",
  },
  {
    id: 5,
    imageUrl: "/sections-imgs/image5.png",
    title: "Videos",
    color: "#9E9E9E",
  },
];
---

<section class="sections-component" id="sections">
  <div class="parallax-bg"></div>

  <div class="container">
    <div class="section-header">
      <h2>Sections</h2>
      <div class="underline"></div>
    </div>

    <div class="sections-grid">
      {
        sections.map((section) => (
          <div class="section-item">
            <div class="section-icon" style={`border-color: ${section.color}`}>
              <img src={section.imageUrl} alt={section.title} />
            </div>
            <h3 class="section-title" style={`color: ${section.color}`}>
              {section.title}
            </h3>
          </div>
        ))
      }
    </div>
  </div>
</section>

<style>
  .sections-component {
    position: relative;
    padding: 4rem 2rem;
    min-height: 60vh;
    overflow: hidden;
    background-color: #f0f0f0;
  }

  .parallax-bg {
    position: absolute;
    top: -20%;
    left: -10%;
    width: 120%;
    height: 140%;
    background-image: url("/sections-bg.png");
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    opacity: 0.1;
    z-index: 0;
    will-change: transform;
    transition: transform 0.1s ease-out;
  }

  .container {
    position: relative;
    z-index: 1;
    max-width: 1200px;
    margin: 0 auto;
  }

  .section-header {
    text-align: center;
    margin-bottom: 3rem;
  }

  .section-header h2 {
    font-size: 2.5rem;
    color: #333;
    margin: 0 0 0.5rem 0;
    font-weight: 600;
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,
      sans-serif;
  }

  .underline {
    width: 60px;
    height: 3px;
    background: linear-gradient(90deg, #ffc107, #ff9800);
    margin: 0 auto;
    border-radius: 2px;
  }

  .sections-grid {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 3rem;
    flex-wrap: wrap;
  }

  .section-item {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    transition: transform 0.3s ease;
    cursor: pointer;
  }

  .section-item:hover {
    transform: translateY(-10px);
  }

  .section-icon {
    width: 100px;
    height: 100px;
    border-radius: 50%;
    border: 4px solid;
    display: flex;
    align-items: center;
    justify-content: center;
    background: white;
    margin-bottom: 1rem;
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
    overflow: hidden;
  }

  .section-item:hover .section-icon {
    transform: scale(1.1);
    box-shadow: 0 12px 35px rgba(0, 0, 0, 0.15);
  }

  .section-icon img {
    width: 70%;
    height: 70%;
    object-fit: cover;
    border-radius: 50%;
  }

  .section-title {
    font-size: 1.1rem;
    font-weight: 500;
    margin: 0;
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,
      sans-serif;
    transition: color 0.3s ease;
  }

  .section-item:hover .section-title {
    font-weight: 600;
  }

  @media (max-width: 768px) {
    .sections-component {
      padding: 3rem 1rem;
    }

    .section-header h2 {
      font-size: 2rem;
    }

    .sections-grid {
      gap: 2rem;
    }

    .section-icon {
      width: 80px;
      height: 80px;
    }

    .section-title {
      font-size: 1rem;
    }
  }

  @media (max-width: 480px) {
    .sections-grid {
      gap: 1.5rem;
    }

    .section-icon {
      width: 70px;
      height: 70px;
    }

    .section-title {
      font-size: 0.9rem;
    }
  }
</style>

<script>
  // Parallax effect for background image
  function handleScroll() {
    const sections = document.getElementById("sections");
    const parallaxBg = document.querySelector(".parallax-bg") as HTMLElement;

    if (!sections || !parallaxBg) return;

    const rect = sections.getBoundingClientRect();
    const scrolled = window.pageYOffset;
    const rate = scrolled * -0.5;

    // Only apply parallax when section is in viewport
    if (rect.bottom >= 0 && rect.top <= window.innerHeight) {
      parallaxBg.style.transform = `translate3d(0, ${rate}px, 0)`;
    }
  }

  // Throttle scroll events for better performance
  let ticking = false;
  function requestScrollUpdate() {
    if (!ticking) {
      requestAnimationFrame(handleScroll);
      ticking = true;
      setTimeout(() => {
        ticking = false;
      }, 16);
    }
  }

  // Add scroll listener when component loads
  if (typeof window !== "undefined") {
    window.addEventListener("scroll", requestScrollUpdate, { passive: true });

    // Initial call
    handleScroll();
  }
</script>
